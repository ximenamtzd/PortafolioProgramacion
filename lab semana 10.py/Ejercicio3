#Gestion de contactos con tuplas y estructuras anidadas

class Agenda:
    def __init__(self):
        self.contactos = []

    def agregar_contacto(self, nombre, numero, correo):
        # Crear una tupla con los detalles del contacto y agregarla a la lista
        contacto = (nombre, numero, correo)
        self.contactos.append(contacto)
        print(f"Contacto '{nombre}' agregado a la agenda.")

    def buscar_contacto(self, nombre):
        # Buscar el contacto por nombre
        for contacto in self.contactos:
            if contacto[0].lower() == nombre.lower():
                print(f"Contacto encontrado: Nombre: {contacto[0]}, Número: {contacto[1]}, Correo: {contacto[2]}")
                return
        print(f"Contacto con nombre '{nombre}' no encontrado.")

    def listar_contactos(self):
        # Ordenar los contactos por nombre de manera alfabética
        contactos_ordenados = sorted(self.contactos, key=lambda x: x[0].lower())
        print("Lista de contactos ordenados alfabéticamente:")
        for contacto in contactos_ordenados:
            print(f"Nombre: {contacto[0]}, Número: {contacto[1]}, Correo: {contacto[2]}")

def mostrar_menu():
    print("\nGestor de Contactos")
    print("1. Agregar nuevo contacto")
    print("2. Buscar contacto por nombre")
    print("3. Listar todos los contactos en orden alfabético")
    print("4. Salir")

def main():
    agenda = Agenda()

    while True:
        mostrar_menu()
        opcion = input("Selecciona una opción: ")

        if opcion == '1':
            nombre = input("Nombre del contacto: ")
            numero = input("Número del contacto: ")
            correo = input("Correo del contacto: ")
            agenda.agregar_contacto(nombre, numero, correo)

        elif opcion == '2':
            nombre = input("Nombre del contacto a buscar: ")
            agenda.buscar_contacto(nombre)

        elif opcion == '3':
            agenda.listar_contactos()

        elif opcion == '4':
            print("¡Gracias por usar el gestor de contactos!")
            break

        else:
            print("Opción no válida. Intenta de nuevo.")

if __name__ == "__main__":
    main()
